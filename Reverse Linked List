#include <stdio.h>
#include <stdlib.h>

struct ListNode{
    int val;
    struct ListNode *next;
};

struct ListNode* reverseList(struct ListNode *head){
    struct ListNode *prev = NULL;
    struct ListNode *current = head;
    struct ListNode *next = NULL;

    while (current != NULL){
        next = current->next;
        current->next = prev;
        prev = current;
        current = next;
    }

    return prev;
}

struct ListNode* createNode(int val){
    struct ListNode *newNode = (struct ListNode*)malloc(sizeof(struct ListNode));
    newNode->val = val;
    newNode->next = NULL;
    return newNode;
}

void insertAtEnd(struct ListNode** head, int data){
  struct ListNode* newnode = newnode(data);
  if (*head == NULL){
      *head = newnode;
      newnode->next = *head;
  }
  else{
      struct node* temp = *head;
      while (temp->next != *head){
          temp = temp->next;
      }
      temp->next = newnode;
      newnode->next = *head;
  }
}

void printList(struct ListNode *head){
    struct ListNode *current = head;
    while (current != NULL){
        printf("%d -> ", current->val);
        current = current->next;
    }
    printf("NULL\n");
}

int main(){
    insertAtEnd(&head, 1);
    insertAtEnd(&head, 2);
    insertAtEnd(&head, 3);
    insertAtEnd(&head, 4);
    insertAtEnd(&head, 5);

    printf("Original list:\n");
    printList(head);

    struct ListNode *reversed_head = reverseList(head);

    printf("Reversed list:\n");
    printList(reversed_head);

    return 0;
}
